#!/bin/sh
#
# Super-mega opticharger of doom
# Shrinks apks by running optipng on png images
#
# Point APKCERTS at the full path to a generated apkcerts.txt file, such as:
# /home/shade/dev/sources/android-cm-eclair/out/target/product/dream_sapphire/obj/PACKAGING/target_files_intermediates/cyanogen_dream_sapphire-target_files-eng.shade/META/apkcerts.txt
#
# cyanogen - shade@chemlab.org

set -e

BASE=`pwd`
if [ "$APKCERTS" = "" ];
then
    if [ -f ~/apkcerts.txt ];
    then
        APKCERTS=~/apkcerts.txt
    else
        echo "Set APKCERTS to the path to your apkcerts.txt file"
        exit 1;
    fi
fi

if [ ! -f "$APKCERTS" ];
then
    echo "Invalid path to apkcerts.txt, set APKCERTS to the correct path."
fi

if [ -e "$1" ];
then
    NAME=`basename $1`;
    echo "Optimizing $NAME...";

    CERT=`grep $NAME $APKCERTS | awk {'print $2'} | cut -f 2 -d "=" | tr -d "\""`;
    KEY=`grep $NAME $APKCERTS | awk {'print $3'} | cut -f 2 -d "=" | tr -d "\""`;
    if [ "$CERT" = "" ];
    then
        echo "Unable to find certificate for $NAME"
        exit 1;
    fi

    rm -rf /tmp/$NAME
    mkdir /tmp/$NAME
    cd /tmp/$NAME
    unzip $BASE/$1
    optipng -o7 `find . -name "*.png" | grep -v "\.9\.png$" | tr "\n" " "`
    mv $BASE/$1 $BASE/$1.old

    echo "Repacking apk.."
    aapt p -0 res/raw -0 res/raw-en -F $NAME .
    
        echo "Resigning with cert: `echo $CERT`"
    java -jar $DROID/out/host/linux-x86/framework/signapk.jar $DROID/$CERT $DROID/$KEY $NAME signed_$NAME

    echo "Zipalign.."
    zipalign -f 4 signed_$NAME $BASE/$1
    ls -l $BASE/$1.old
    ls -l $BASE/$1
    rm $BASE/$1.old
else
    echo "Usage: $0 [apk file]"
fi

